// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// classifySpatiallyByBlocks
Rcpp::NumericVector classifySpatiallyByBlocks(Rcpp::DataFrame df, std::string lon, std::string lat, int size, int blockSize);
RcppExport SEXP _RSpatial_classifySpatiallyByBlocks(SEXP dfSEXP, SEXP lonSEXP, SEXP latSEXP, SEXP sizeSEXP, SEXP blockSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< std::string >::type lon(lonSEXP);
    Rcpp::traits::input_parameter< std::string >::type lat(latSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< int >::type blockSize(blockSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(classifySpatiallyByBlocks(df, lon, lat, size, blockSize));
    return rcpp_result_gen;
END_RCPP
}
// isInsideConvexHull
bool isInsideConvexHull(Rcpp::DataFrame hulls, double checkx, double checky, int size);
RcppExport SEXP _RSpatial_isInsideConvexHull(SEXP hullsSEXP, SEXP checkxSEXP, SEXP checkySEXP, SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type hulls(hullsSEXP);
    Rcpp::traits::input_parameter< double >::type checkx(checkxSEXP);
    Rcpp::traits::input_parameter< double >::type checky(checkySEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(isInsideConvexHull(hulls, checkx, checky, size));
    return rcpp_result_gen;
END_RCPP
}
// getAVN
Rcpp::NumericVector getAVN(double value, Rcpp::NumericVector lon, Rcpp::NumericVector lat, Rcpp::NumericVector values, int size);
RcppExport SEXP _RSpatial_getAVN(SEXP valueSEXP, SEXP lonSEXP, SEXP latSEXP, SEXP valuesSEXP, SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lon(lonSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lat(latSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(getAVN(value, lon, lat, values, size));
    return rcpp_result_gen;
END_RCPP
}
// mutateNumber
Rcpp::NumericVector mutateNumber(Rcpp::NumericVector one, Rcpp::NumericVector two);
RcppExport SEXP _RSpatial_mutateNumber(SEXP oneSEXP, SEXP twoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type one(oneSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type two(twoSEXP);
    rcpp_result_gen = Rcpp::wrap(mutateNumber(one, two));
    return rcpp_result_gen;
END_RCPP
}
// createNextGen
Rcpp::DataFrame createNextGen(Rcpp::DataFrame df, Rcpp::NumericVector avnValues, double mutationRate, int explore, int size, Rcpp::NumericVector randoms);
RcppExport SEXP _RSpatial_createNextGen(SEXP dfSEXP, SEXP avnValuesSEXP, SEXP mutationRateSEXP, SEXP exploreSEXP, SEXP sizeSEXP, SEXP randomsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type avnValues(avnValuesSEXP);
    Rcpp::traits::input_parameter< double >::type mutationRate(mutationRateSEXP);
    Rcpp::traits::input_parameter< int >::type explore(exploreSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type randoms(randomsSEXP);
    rcpp_result_gen = Rcpp::wrap(createNextGen(df, avnValues, mutationRate, explore, size, randoms));
    return rcpp_result_gen;
END_RCPP
}
// getDist
float getDist(float lon1, float lat1, float lon2, float lat2);
RcppExport SEXP _RSpatial_getDist(SEXP lon1SEXP, SEXP lat1SEXP, SEXP lon2SEXP, SEXP lat2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type lon1(lon1SEXP);
    Rcpp::traits::input_parameter< float >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< float >::type lon2(lon2SEXP);
    Rcpp::traits::input_parameter< float >::type lat2(lat2SEXP);
    rcpp_result_gen = Rcpp::wrap(getDist(lon1, lat1, lon2, lat2));
    return rcpp_result_gen;
END_RCPP
}
// poThin
Rcpp::NumericVector poThin(Rcpp::DataFrame df, double spacing, int dimension, std::string lon, std::string lat);
RcppExport SEXP _RSpatial_poThin(SEXP dfSEXP, SEXP spacingSEXP, SEXP dimensionSEXP, SEXP lonSEXP, SEXP latSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type spacing(spacingSEXP);
    Rcpp::traits::input_parameter< int >::type dimension(dimensionSEXP);
    Rcpp::traits::input_parameter< std::string >::type lon(lonSEXP);
    Rcpp::traits::input_parameter< std::string >::type lat(latSEXP);
    rcpp_result_gen = Rcpp::wrap(poThin(df, spacing, dimension, lon, lat));
    return rcpp_result_gen;
END_RCPP
}
// rasterMaker
Rcpp::NumericVector rasterMaker(Rcpp::DataFrame df, int minX, int maxY, int nCols, int nRows, int sizeOfGen, int sizeOfList, int degree, bool block);
RcppExport SEXP _RSpatial_rasterMaker(SEXP dfSEXP, SEXP minXSEXP, SEXP maxYSEXP, SEXP nColsSEXP, SEXP nRowsSEXP, SEXP sizeOfGenSEXP, SEXP sizeOfListSEXP, SEXP degreeSEXP, SEXP blockSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type minX(minXSEXP);
    Rcpp::traits::input_parameter< int >::type maxY(maxYSEXP);
    Rcpp::traits::input_parameter< int >::type nCols(nColsSEXP);
    Rcpp::traits::input_parameter< int >::type nRows(nRowsSEXP);
    Rcpp::traits::input_parameter< int >::type sizeOfGen(sizeOfGenSEXP);
    Rcpp::traits::input_parameter< int >::type sizeOfList(sizeOfListSEXP);
    Rcpp::traits::input_parameter< int >::type degree(degreeSEXP);
    Rcpp::traits::input_parameter< bool >::type block(blockSEXP);
    rcpp_result_gen = Rcpp::wrap(rasterMaker(df, minX, maxY, nCols, nRows, sizeOfGen, sizeOfList, degree, block));
    return rcpp_result_gen;
END_RCPP
}
// rasterMakerAdjust
Rcpp::NumericVector rasterMakerAdjust(Rcpp::DataFrame df, int minX, int maxY, int nCols, int nRows, int sizeOfGen, int sizeOfList, int degree, bool block, int horizontal, int vertical);
RcppExport SEXP _RSpatial_rasterMakerAdjust(SEXP dfSEXP, SEXP minXSEXP, SEXP maxYSEXP, SEXP nColsSEXP, SEXP nRowsSEXP, SEXP sizeOfGenSEXP, SEXP sizeOfListSEXP, SEXP degreeSEXP, SEXP blockSEXP, SEXP horizontalSEXP, SEXP verticalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type minX(minXSEXP);
    Rcpp::traits::input_parameter< int >::type maxY(maxYSEXP);
    Rcpp::traits::input_parameter< int >::type nCols(nColsSEXP);
    Rcpp::traits::input_parameter< int >::type nRows(nRowsSEXP);
    Rcpp::traits::input_parameter< int >::type sizeOfGen(sizeOfGenSEXP);
    Rcpp::traits::input_parameter< int >::type sizeOfList(sizeOfListSEXP);
    Rcpp::traits::input_parameter< int >::type degree(degreeSEXP);
    Rcpp::traits::input_parameter< bool >::type block(blockSEXP);
    Rcpp::traits::input_parameter< int >::type horizontal(horizontalSEXP);
    Rcpp::traits::input_parameter< int >::type vertical(verticalSEXP);
    rcpp_result_gen = Rcpp::wrap(rasterMakerAdjust(df, minX, maxY, nCols, nRows, sizeOfGen, sizeOfList, degree, block, horizontal, vertical));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RSpatial_classifySpatiallyByBlocks", (DL_FUNC) &_RSpatial_classifySpatiallyByBlocks, 5},
    {"_RSpatial_isInsideConvexHull", (DL_FUNC) &_RSpatial_isInsideConvexHull, 4},
    {"_RSpatial_getAVN", (DL_FUNC) &_RSpatial_getAVN, 5},
    {"_RSpatial_mutateNumber", (DL_FUNC) &_RSpatial_mutateNumber, 2},
    {"_RSpatial_createNextGen", (DL_FUNC) &_RSpatial_createNextGen, 6},
    {"_RSpatial_getDist", (DL_FUNC) &_RSpatial_getDist, 4},
    {"_RSpatial_poThin", (DL_FUNC) &_RSpatial_poThin, 5},
    {"_RSpatial_rasterMaker", (DL_FUNC) &_RSpatial_rasterMaker, 9},
    {"_RSpatial_rasterMakerAdjust", (DL_FUNC) &_RSpatial_rasterMakerAdjust, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_RSpatial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
